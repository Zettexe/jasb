@use "../../_colors.scss";
@use "../../_util.scss";

#gacha {
  .collection-links {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
    flex-flow: column;
    align-items: center;

    a {
      @include util.icon-aside;
    }
  }
}

#roll-screen {
  position: fixed;
  inset: 0 0 0 0;
  z-index: 10;

  @include colors.by-name("card");
  background-color: #000000;

  .advance-button {
    position: absolute;
    bottom: 2em;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    pointer-events: none;

    > * {
      pointer-events: all;
    }
  }

  .fireworks {
    position: absolute;
    inset: 0 0 0 0;
  }

  .cards {
    display: grid;
    grid-template-columns: repeat(5, auto);
    grid-template-rows: repeat(2, auto);
    align-content: center;
    justify-content: center;
    align-items: center;
    justify-items: center;
    font-size: 0.9vw;
    padding: 2em;
    margin: 0;
    gap: 0;
    width: 100%;
    height: 100%;
    box-sizing: border-box;

    @media (orientation: portrait) {
      grid-template-columns: repeat(3, auto);
      grid-template-rows: repeat(4, auto);
      font-size: 0.7vh;

      &::after {
        content: "";
        grid-area: 4 / 1;
      }
    }

    > li,
    > li > .card-container {
      display: contents;
    }

    .card {
      margin: 2em;
    }

    .card.unrevealed {
      & > .face,
      &::before {
        filter: brightness(0) invert(1);
      }
    }

    .card::after {
      display: block;
      content: "";
      position: absolute;
      inset: -1.5em -1.5em -1.5em -1.5em;
      z-index: -1;

      border-radius: 1.5em;
      background: var(--quality-background, var(--rarity-color));
      filter: blur(1em);
    }
  }
}
